name: Release Creation

on:
  release:
    types: [published]

env:
  ZIP_FILENAME: "padhiver-tradpack"
  PACKAGE_ID: "padhiver-tradpack"

jobs:
  build:    
    runs-on: ubuntu-latest
    steps:
    # Checkout files from Github
    - name: Checkout files
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Fusionner les traductions françaises
    - name: Merge Translations
      run: |
        npm i -D deepmerge
        node ./.github/workflows/merge.js

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{github.event.release.tag_name}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/${{env.ZIP_FILENAME}}.zip
        url: https://github.com/${{github.repository}}
        changelog: https://github.com/${{github.repository}}/releases/tag/${{github.event.release.tag_name}}

    # Create a zip file with all files required by the module
    - name: Create archive
      run: zip ${{env.ZIP_FILENAME}}.zip module.json fr.json scripts -x ".*"

    # Create a release for this specific version
    - name: Update Release with Files
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: ${{ github.event.release.name }} 
        draft: ${{ github.event.release.unpublished }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./${{env.ZIP_FILENAME}}.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}
        makeLatest: ${{ github.event.release.prerelease && 'false' || 'legacy' }}

    # Publish to foundry (désactivé)
    # - name: Publish Module to FoundryVTT Website  
    #   if: ${{ !github.event.release.prerelease && env.PACKAGE_ID != '' }}
    #   uses: ghost-fvtt/foundry-publish@v2
    #   with:
    #     username: ${{ secrets.FVTT_USERNAME }}
    #     password: ${{ secrets.FVTT_PASSWORD }}
    #     manifest-path: './module.json'
    #     package-id: ${{ env.PACKAGE_ID }}