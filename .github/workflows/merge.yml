name: Create Release

on: 
  release:
    types: [ published ]

env:
  ZIP_FILENAME: "padhiver-tradpack"
  PACKAGE_CONTENT: "module.json fr.json welcome.js"
  PACKAGE_ID: "padhiver-tradpack"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Fusionner les traductions françaises
    - name: Merge Translation
      run: |
        npm i -D deepmerge
        node ./.github/workflows/merge.js

    # Remplacer les liens dans le module.json
    - name: Substitute Manifest and Download Links
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{github.event.release.tag_name}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/${{env.ZIP_FILENAME}}.zip
        changelog: https://github.com/${{github.repository}}/releases/tag/${{github.event.release.tag_name}}

    # Créer le zip
    - name: Create Artifact
      run: zip -r ${{env.ZIP_FILENAME}}.zip ${{env.PACKAGE_CONTENT}}

    # Mettre à jour la release
    - name: Update Release with Files
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: ${{ github.event.release.name }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./${{env.ZIP_FILENAME}}.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}

    # Publication sur le dépôt Foundry VTT
    - name: Publish to Foundry VTT Repo
      if: ${{ env.PACKAGE_ID }}
      run: npx @ghost-fvtt/foundry-publish
      env:
        FVTT_MANIFEST_PATH: 'module.json'
        FVTT_PACKAGE_ID: ${{ env.PACKAGE_ID }}
        FVTT_USERNAME: ${{ secrets.FVTT_USERNAME }}
        FVTT_PASSWORD: ${{ secrets.FVTT_PASSWORD }}